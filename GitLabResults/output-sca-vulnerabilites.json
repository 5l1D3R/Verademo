{"version": "15.0.0","vulnerabilities":[{"id":"964cd74171f427720480efdec40a7c7f6e58426a","name":"Man In The Middle (MitM) Attacks Are Possible With Spoofed SSL Servers at HttpClient","description":"The HttpClient component supports the client-side of RFC 1945 (HTTP/1.0) and RFC 2616 (HTTP/1.1) , several related specifications (RFC 2109 (Cookies) , RFC 2617 (HTTP Authentication) , etc.), and prov - The Apache Commons HTTPClient 3.x (as used in Amazon Flexible Payments Service FPS merchant Java SDK and other SDK products), does not verify that the server hostname matches a domain name in the subjects Common Name CN or subjectAltName field of the X.509 certificate, which allows Man In The Middle attackers to spoof SSL servers via an arbitrary valid certificate.","cve":"2012-5783","severity":"Medium","solution":"The Apache HTTP client is now EOL and has been replaced by the Apache Commons library. The new group id is org.apache.httpcomponents and the new artifact id is httpclient.","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:commons-httpclient:commons-httpclient"},"version":"3.1"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - HttpClient - Version: 1.0-3.1 - CVE: 2012-5783","value":"JAVA - HttpClient - Version: 1.0-3.1 - CVE: 2012-5783","url":"http://issues.apache.org/jira/browse/HTTPCLIENT"},{"type":"cve","name":"2012-5783","value":"2012-5783","url":"http://issues.apache.org/jira/browse/HTTPCLIENT"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/110?version=3.1"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/294"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:commons-httpclient:commons-httpclient"}}},{"id":"bbf5d96a49a2b58b8988202a3c8728461639090e","name":"Denial Of Service (DoS) Memory Consumption at Apache XML Security for Java","description":"Apache XML Security for Java supports XML-Signature Syntax and Processing, W3C Recommendation 12 February 2002, and XML Encryption Syntax and Processing, W3C Recommendation 10 December 2002. As of ver - Apache Santuario XML Security for Java before 1.5.6, when applying Transforms, allows remote attackers to cause a denial of service (memory consumption) via crafted Document Type Definitions (DTDs), related to signatures.","cve":"2013-4517","severity":"Medium","solution":"No immediate fix found!","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:org.apache.santuario:xmlsec"},"version":"1.5.1"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Apache XML Security for Java - Version: 1.0-1.5.5 - CVE: 2013-4517","value":"JAVA - Apache XML Security for Java - Version: 1.0-1.5.5 - CVE: 2013-4517","url":"https://issues.apache.org/jira/browse/SANTUARIO"},{"type":"cve","name":"2013-4517","value":"2013-4517","url":"https://issues.apache.org/jira/browse/SANTUARIO"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/117?version=1.5.1"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/808"},{"url":"https://github.com/apache/santuario-java/compare/10c73335ccd7fabe63ea58754bea1bc4b2dc4a93...402e581537543ffa6bea283c0e5e1baae880464f"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.apache.santuario:xmlsec"}}},{"id":"bbf5d96a49a2b58b8988202a3c8728461639090e","name":"Spoofable XML Signature at Apache XML Security for Java","description":"Apache XML Security for Java supports XML-Signature Syntax and Processing, W3C Recommendation 12 February 2002, and XML Encryption Syntax and Processing, W3C Recommendation 10 December 2002. As of ver - jcp/xml/dsig/internal/dom/DOMCanonicalizationMethod.java in Apache Santuario XML Security for Java 1.4.x before 1.4.8 and 1.5.x before 1.5.5 allows context-dependent attackers to spoof an XML Signature by using the CanonicalizationMethod parameter to specify an arbitrary weak canonicalization algorithm to apply to the SignedInfo part of the Signature.","cve":"2013-2172","severity":"Medium","solution":"No immediate fix found!","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:org.apache.santuario:xmlsec"},"version":"1.5.1"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Apache XML Security for Java - Version: 1.5.0-1.5.4 - CVE: 2013-2172","value":"JAVA - Apache XML Security for Java - Version: 1.5.0-1.5.4 - CVE: 2013-2172","url":"https://issues.apache.org/jira/browse/SANTUARIO"},{"type":"cve","name":"2013-2172","value":"2013-2172","url":"https://issues.apache.org/jira/browse/SANTUARIO"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/117?version=1.5.1"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/831"},{"url":"https://github.com/apache/santuario-java/commit/d0536272059bba735583809e2bfa5d249bb2e537"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.apache.santuario:xmlsec"}}},{"id":"964cd74171f427720480efdec40a7c7f6e58426a","name":"Man In The Middle (MitM) Attacks Are Possible With Spoofed SSL Servers at HttpClient","description":"The HttpClient component supports the client-side of RFC 1945 (HTTP/1.0) and RFC 2616 (HTTP/1.1) , several related specifications (RFC 2109 (Cookies) , RFC 2617 (HTTP Authentication) , etc.), and prov - http/conn/ssl/AbstractVerifier.java in Apache Commons HttpClient before 4.2.3 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  NOTE: this issue exists because of an incomplete fix for CVE-2012-5783.","cve":"2012-6153","severity":"Medium","solution":"No immediate fix found!","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:commons-httpclient:commons-httpclient"},"version":"3.1"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - HttpClient - Version: 3.0-3.1 - CVE: 2012-6153","value":"JAVA - HttpClient - Version: 3.0-3.1 - CVE: 2012-6153","url":"http://issues.apache.org/jira/browse/HTTPCLIENT"},{"type":"cve","name":"2012-6153","value":"2012-6153","url":"http://issues.apache.org/jira/browse/HTTPCLIENT"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/110?version=3.1"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/1123"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:commons-httpclient:commons-httpclient"}}},{"id":"964cd74171f427720480efdec40a7c7f6e58426a","name":"Improper Certificate Common Name Verification Allows Spoofing SSL Servers at HttpClient","description":"The HttpClient component supports the client-side of RFC 1945 (HTTP/1.0) and RFC 2616 (HTTP/1.1) , several related specifications (RFC 2109 (Cookies) , RFC 2617 (HTTP Authentication) , etc.), and prov - org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \"CN=\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \"foo,CN=www.apache.org\" string in the O field.","cve":"2014-3577","severity":"Medium","solution":"No immediate fix found!","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:commons-httpclient:commons-httpclient"},"version":"3.1"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - HttpClient - Version: 3.0-3.1 - CVE: 2014-3577","value":"JAVA - HttpClient - Version: 3.0-3.1 - CVE: 2014-3577","url":"http://issues.apache.org/jira/browse/HTTPCLIENT"},{"type":"cve","name":"2014-3577","value":"2014-3577","url":"http://issues.apache.org/jira/browse/HTTPCLIENT"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/110?version=3.1"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/1158"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:commons-httpclient:commons-httpclient"}}},{"id":"74aca283cd4f4b4f3e425f5820cda58f44409547","name":"XML External Entity (XXE) Through An XSLT Extension at jstl","description":"null - Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a (1) <x:parse> or (2) <x:transform> JSTL XML tag.","cve":"2015-0254","severity":"High","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:javax.servlet:jstl"},"version":"1.2"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - jstl - Version: 1.0-1.2 - CVE: 2015-0254","value":"JAVA - jstl - Version: 1.0-1.2 - CVE: 2015-0254","url":"https://www.veracode.com"},{"type":"cve","name":"2015-0254","value":"2015-0254","url":"https://www.veracode.com"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/882?version=1.2"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/1525"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:javax.servlet:jstl"}}},{"id":"fe2d9c5f23767d681a7e38fc8986b812400ec583","name":"Information Disclosure Of Password Hashes Through Crypt_raw at jBCrypt","description":"OpenBSD-style Blowfish password hashing for Java - Integer overflow in the crypt_raw method in the key-stretching implementation in jBCrypt before 0.4 makes it easier for remote attackers to determine cleartext values of password hashes via a brute-force attack against hashes associated with the maximum exponent.","cve":"2015-0886","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.mindrot:jbcrypt"},"version":"0.3m"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - jBCrypt - Version: 0.3m-0.3m - CVE: 2015-0886","value":"JAVA - jBCrypt - Version: 0.3m-0.3m - CVE: 2015-0886","url":"https://www.veracode.com"},{"type":"cve","name":"2015-0886","value":"2015-0886","url":"https://www.veracode.com"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/4015?version=0.3m"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/1527"},{"url":"https://github.com/jeremyh/jBCrypt/commit/e015c2c110ab7cf544400893f3543b45f359ff58"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.mindrot:jbcrypt"}}},{"id":"b984f6288bb695b49d5eed9e3fcc3d75d5fe5e9f","name":"Multiple Cross-site Scripting (XSS) Vulnerabilities at Apache Sling API","description":"The Apache Sling API defines an extension to the Servlet API 2.4 to provide access to content and unified access to request parameters hiding the differences between the different methods of transferr - Multiple cross-site scripting (XSS) vulnerabilities in Apache Sling API before 2.2.2 and Apache Sling Servlets Post before 2.1.2 allow remote attackers to inject arbitrary web script or HTML via the URI, related to (1) org/apache/sling/api/servlets/HtmlResponse and (2) org/apache/sling/servlets/post/HtmlResponse.","cve":"2015-2944","severity":"Medium","solution":"No immediate fix found!","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:org.apache.sling:org.apache.sling.api"},"version":"2.0.2-incubator"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Apache Sling API - Version: 0.0-2.2.1 - CVE: 2015-2944","value":"JAVA - Apache Sling API - Version: 0.0-2.2.1 - CVE: 2015-2944","url":"https://issues.apache.org/jira/browse/SLING"},{"type":"cve","name":"2015-2944","value":"2015-2944","url":"https://issues.apache.org/jira/browse/SLING"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/817?version=2.0.2-incubator"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/1655"},{"url":"https://github.com/apache/sling/commit/89e0555c75da9bda3007dadc08521dc0cbc90a0c"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.apache.sling:org.apache.sling.api"}}},{"id":"da217367fd25e88df52ba79e47658d4cf928b0d1","name":"Potential Remote Code Execution Via Java Object Deserialization at Apache Commons Collections","description":"The Apache Commons Collections package contains types that extend and augment the Java Collections Framework. - Apache Commons includes a class called InvokerTransformer. An application is vulnerable to a deserialization attack if this class is available on the classpath and the application deserializes untrusted or user-supplied data. It's not necessary to actually use InvokerTransfomer to be vulnerable. With these two criteria satisfied, an attacker may construct a gadget chain using classes in the component to execute arbitrary code. The chain relies on the class InvokerTransformer in the org.apache.commons.collections.functors package to invoke methods during the deserialization process.\n\nThe fix prevents deserialization of InvokerTransformer by default unless it's specifically enabled.\n\nCVE-2015-4852, CVE-2015-6420, CVE-2015-7501, and CVE-2015-7450 are all related to this artifact.","cve":"2015-4852","severity":"High","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.apache.commons:commons-collections4"},"version":"4.0"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Apache Commons Collections - Version: 4.0-4.0 - CVE: 2015-4852","value":"JAVA - Apache Commons Collections - Version: 4.0-4.0 - CVE: 2015-4852","url":"http://issues.apache.org/jira/browse/COLLECTIONS"},{"type":"cve","name":"2015-4852","value":"2015-4852","url":"http://issues.apache.org/jira/browse/COLLECTIONS"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/3421?version=4.0"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/1847"},{"url":"https://github.com/apache/commons-collections/compare/3b691712fd2dc7251907912124de0954f0652f6c...b2b8f4adc557e4ef1ee2fe5e0ab46866c06ec55b"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.apache.commons:commons-collections4"}}},{"id":"73cebee358d4738326d4540ea496eefa1e5ad05f","name":"SAML Assertion Insertion at Keycloak SAML Core","description":"Keycloak SSO - Keycloak saml-core is vulnerable to malicious SAML assertion insertion. This vulnerability is due to the fact that the assertions are not verified as signed before being accepted.","cve":"none CVE","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.keycloak:keycloak-saml-core"},"version":"1.8.1.Final"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Keycloak SAML Core - Version: 1.1.0.Beta1-1.9.0.CR1 - CVE: null","value":"JAVA - Keycloak SAML Core - Version: 1.1.0.Beta1-1.9.0.CR1 - CVE: null","url":"http://jira.jboss.com/jira/browse/KEYCLOAK"},{"type":"cve","name":"none CVE","value":"none CVE","url":"http://jira.jboss.com/jira/browse/KEYCLOAK"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/379321?version=1.8.1.Final"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/2367"},{"url":"https://github.com/keycloak/keycloak/commit/69c3d38164d8c57afad57c38357cff661953bf5b"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.keycloak:keycloak-saml-core"}}},{"id":"5d7491ed6ebd02b6a8d2305f8e6b7fe5dbd95f72","name":"Remote Code Execution Via Serialization at Apache Commons FileUpload","description":"The Apache Commons FileUpload component provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications. - Apache Commons FileUpload is vulnerable to remote code execution via serialization. In Apache Commons FileUpload, a DiskFileItem is used to handle file uploads. DiskFileItem is serializable and implements custom writeObject() and readObject() functions. An attacker is possible to modify the serialized data before it is deserialized, and write or copy files to disk in arbitrary locations. Furthermore, it's possible for an attacker to integrate this vulnerability with the ysoserial tool to upload and execute binaries in a single deserialization call.","cve":"2016-1000031","severity":"High","solution":"Please apply the fix patch to your code.","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:commons-fileupload:commons-fileupload"},"version":"1.3.2"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Apache Commons FileUpload - Version: 1.1-1.3.2 - CVE: 2016-1000031","value":"JAVA - Apache Commons FileUpload - Version: 1.1-1.3.2 - CVE: 2016-1000031","url":"http://issues.apache.org/jira/browse/FILEUPLOAD"},{"type":"cve","name":"2016-1000031","value":"2016-1000031","url":"http://issues.apache.org/jira/browse/FILEUPLOAD"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/115?version=1.3.2"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/2911"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:commons-fileupload:commons-fileupload"}}},{"id":"73cebee358d4738326d4540ea496eefa1e5ad05f","name":"Denial Of Service (DoS) at Keycloak SAML Core","description":"Keycloak SSO - keycloak-saml-core is vulnerable to denial of service (DoS) attacks. The vulnerability exists due to the mishandling of a `Logout` request with an `Extensions` in the middle of the request.","cve":"2017-2646","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.keycloak:keycloak-saml-core"},"version":"1.8.1.Final"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Keycloak SAML Core - Version: 1.2.0.CR1-2.5.4.Final - CVE: 2017-2646","value":"JAVA - Keycloak SAML Core - Version: 1.2.0.CR1-2.5.4.Final - CVE: 2017-2646","url":"http://jira.jboss.com/jira/browse/KEYCLOAK"},{"type":"cve","name":"2017-2646","value":"2017-2646","url":"http://jira.jboss.com/jira/browse/KEYCLOAK"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/379321?version=1.8.1.Final"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/3780"},{"url":"https://github.com/keycloak/keycloak/commit/42954e84d99417b8dd5b97181398e2a4cd68bf5d"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.keycloak:keycloak-saml-core"}}},{"id":"60783e4623f2e44063cf2d43d9fbacb2816855c2","name":"Command Line Shell Injection at Plexus Common Utilities","description":"A collection of various utility classes to ease working with strings, files, command lines, XML and more. - plexus-utils is vulnerable to command line shell injection. The library does not correctly quote the contents of double-quoted  strings, allowing a malicious user to inject and execute arbitrary shell code.","cve":"2017-1000487","severity":"High","solution":"No immediate fix found!","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:org.codehaus.plexus:plexus-utils"},"version":"1.0.4"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Plexus Common Utilities - Version: 1.0.4-1.5 - CVE: 2017-1000487","value":"JAVA - Plexus Common Utilities - Version: 1.0.4-1.5 - CVE: 2017-1000487","url":"http://github.com/codehaus-plexus/plexus-utils/issues"},{"type":"cve","name":"2017-1000487","value":"2017-1000487","url":"http://github.com/codehaus-plexus/plexus-utils/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/930?version=1.0.4"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/3933"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.codehaus.plexus:plexus-utils"}}},{"id":"f5c644543148f028880ab3573ba8095faa71d9f8","name":"Usable Expired Certificates at MySQL Connector/J","description":"JDBC Type 4 driver for MySQL - mysql-connector-java doesn't check the server's SSL certificate for an expiration date before it establishes the SSL connection. This would allow attackers to use an expired certificate to make requests to the server.","cve":"2017-3586","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:mysql:mysql-connector-java"},"version":"5.1.35"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - MySQL Connector/J - Version: 5.1.21-5.1.41 - CVE: 2017-3586","value":"JAVA - MySQL Connector/J - Version: 5.1.21-5.1.41 - CVE: 2017-3586","url":"https://www.veracode.com"},{"type":"cve","name":"2017-3586","value":"2017-3586","url":"https://www.veracode.com"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/1834?version=5.1.35"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/3962"},{"url":"https://github.com/mysql/mysql-connector-j/commit/aeba57264966b0fd329cdb8170ba772fd8fd4de2"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:mysql:mysql-connector-java"}}},{"id":"f5c644543148f028880ab3573ba8095faa71d9f8","name":"Improper Automatic Deserialization at MySQL Connector/J","description":"JDBC Type 4 driver for MySQL - mysql-connector-java is vulnerable to deserialization attacks. The vulnerability exists as there is an improper automatic deserialization issue in the `getNativeConvertToString` function of `ResultSetImpl`.","cve":"2017-3523","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:mysql:mysql-connector-java"},"version":"5.1.35"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - MySQL Connector/J - Version: 5.1.1-5.1.40 - CVE: 2017-3523","value":"JAVA - MySQL Connector/J - Version: 5.1.1-5.1.40 - CVE: 2017-3523","url":"https://www.veracode.com"},{"type":"cve","name":"2017-3523","value":"2017-3523","url":"https://www.veracode.com"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/1834?version=5.1.35"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/3966"},{"url":"https://github.com/mysql/mysql-connector-j/commit/6189e718de5b6c6115aee45dd7a480081c129d68"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:mysql:mysql-connector-java"}}},{"id":"f5c644543148f028880ab3573ba8095faa71d9f8","name":"Database Overwrite at MySQL Connector/J","description":"JDBC Type 4 driver for MySQL - mysql-connector-java is vulnerable to database overwrite. The library does not clear the cache of preparedstatements after there has been a catalog change, allowing a malicious user to use cached prepared SQL statements against a new catalog.","cve":"2017-3589","severity":"Low","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:mysql:mysql-connector-java"},"version":"5.1.35"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - MySQL Connector/J - Version: 5.1.1-5.1.41 - CVE: 2017-3589","value":"JAVA - MySQL Connector/J - Version: 5.1.1-5.1.41 - CVE: 2017-3589","url":"https://www.veracode.com"},{"type":"cve","name":"2017-3589","value":"2017-3589","url":"https://www.veracode.com"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/1834?version=5.1.35"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/4201"},{"url":"https://github.com/mysql/mysql-connector-j/commit/44631dd316e3da818fb593f02dbbe30308a937e0"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:mysql:mysql-connector-java"}}},{"id":"73cebee358d4738326d4540ea496eefa1e5ad05f","name":"Information Disclosure at Keycloak SAML Core","description":"Keycloak SSO - keycloak-saml-core is vulnerable to sensitive information disclosure. The attack exists because SAML messages are being parsed by replacing the string to obtain the attribute values with the system property in `StaxParserUtil` class. Therefore, attacker can just parse the chosen system property name through the SAML request ID field and can get the response with system property value in `InResponseTo` filed .","cve":"2017-2582","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.keycloak:keycloak-saml-core"},"version":"1.8.1.Final"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Keycloak SAML Core - Version: 1.2.0.CR1-2.5.0.Final - CVE: 2017-2582","value":"JAVA - Keycloak SAML Core - Version: 1.2.0.CR1-2.5.0.Final - CVE: 2017-2582","url":"http://jira.jboss.com/jira/browse/KEYCLOAK"},{"type":"cve","name":"2017-2582","value":"2017-2582","url":"http://jira.jboss.com/jira/browse/KEYCLOAK"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/379321?version=1.8.1.Final"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/5177"},{"url":"https://github.com/keycloak/keycloak/commit/0cb5ba0f6e83162d221681f47b470c3042eef237"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.keycloak:keycloak-saml-core"}}},{"id":"b1b6ea3b7e4aa4f492509a4952029cd8e48019ad","name":"Remote Code Execution (RCE) Via Java Object Deserialization at Apache Commons IO","description":"The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more. - commons-io is vulnerable to remote code execution (RCE) attacks. These attacks are possible because the library doesn't restrict the classes which can be accepted when deserializing a binary.","cve":"none CVE","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:commons-io:commons-io"},"version":"2.4"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Apache Commons IO - Version: 1.0-2.4 - CVE: null","value":"JAVA - Apache Commons IO - Version: 1.0-2.4 - CVE: null","url":"https://issues.apache.org/jira/browse/IO"},{"type":"cve","name":"none CVE","value":"none CVE","url":"https://issues.apache.org/jira/browse/IO"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/122?version=2.4"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/5295"},{"url":"https://github.com/apache/commons-io/compare/a2db8ea72a65d862ff8250e165f6789e9f0df1cb...c65777acf65ee83967ca394adb6619330be9790f"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:commons-io:commons-io"}}},{"id":"6809017a5a76bdaf1957f1cc0a892d448fc6f3df","name":"Security Constraint Bypass at Spring Web MVC","description":"Spring Web MVC - spring-security-web and spring-web are vulnerable to security bypass with static resources. Spring uses the output of `getPathInfo()` when mapping security constraints and requests. It is not standardized whether the path parameters should be included in the value from `getPathInfo()`. Using this knowledge, attackers can bypass security constraints by using encoded characters.","cve":"2018-1199","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.springframework:spring-webmvc"},"version":"4.3.10.RELEASE"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Spring Web MVC - Version: 3.1.0.RELEASE-4.3.12.RELEASE - CVE: 2018-1199","value":"JAVA - Spring Web MVC - Version: 3.1.0.RELEASE-4.3.12.RELEASE - CVE: 2018-1199","url":"https://github.com/spring-projects/spring-framework/issues"},{"type":"cve","name":"2018-1199","value":"2018-1199","url":"https://github.com/spring-projects/spring-framework/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/949?version=4.3.10.RELEASE"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/5771"},{"url":"https://github.com/spring-projects/spring-framework/commit/9470719cdb9e827db1fe6ce088c77ca817a9e0d7"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.springframework:spring-webmvc"}}},{"id":"6809017a5a76bdaf1957f1cc0a892d448fc6f3df","name":"Directory Traversal at Spring Web MVC","description":"Spring Web MVC - spring-webmvc is vulnerable to directory traversal attack. The vulnerability exists due to the improper sanitization of the path values which allows valid Windows files to be served as static resources. This vulnerability only affects spring-webmvc running on Windows which allows serving files with the `file:` locator, does not use Spring Security with versions patched for `CVE-2018-1199`, and use Tomcat/WildFly as the server.","cve":"2018-1271","severity":"Medium","solution":"To mitigate this issue, apply fix patch.","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.springframework:spring-webmvc"},"version":"4.3.10.RELEASE"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Spring Web MVC - Version: 4.0.0.RELEASE-4.3.14.RELEASE - CVE: 2018-1271","value":"JAVA - Spring Web MVC - Version: 4.0.0.RELEASE-4.3.14.RELEASE - CVE: 2018-1271","url":"https://github.com/spring-projects/spring-framework/issues"},{"type":"cve","name":"2018-1271","value":"2018-1271","url":"https://github.com/spring-projects/spring-framework/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/949?version=4.3.10.RELEASE"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/6055"},{"url":"https://github.com/spring-projects/spring-framework/commit/b9ebdaaf3710db473a2e1fec8641c316483a22aa"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.springframework:spring-webmvc"}}},{"id":"db1462df62dbedad7244da30ec471390660271c0","name":"Privilege Escalation Through Multipart Content Pollution at Spring Core","description":"Spring Core - spring-core is vulnerable to multipart content pollution. The application uses an insecure number generator to generate the multipart boundary parameter value, allowing a malicious user to make a informed guess the multipart boundary parameter value. A malicious user can potentially perform a privilege escalation attack by sending tampered requests to a server that the user does not have sufficient access control to.","cve":"2018-1272","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.springframework:spring-core"},"version":"4.3.10.RELEASE"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Spring Core - Version: 4.2.0.RELEASE-4.3.14.RELEASE - CVE: 2018-1272","value":"JAVA - Spring Core - Version: 4.2.0.RELEASE-4.3.14.RELEASE - CVE: 2018-1272","url":"https://github.com/spring-projects/spring-framework/issues"},{"type":"cve","name":"2018-1272","value":"2018-1272","url":"https://github.com/spring-projects/spring-framework/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/562?version=4.3.10.RELEASE"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/6056"},{"url":"https://github.com/spring-projects/spring-framework/commit/e02ff3a0da50744b0980d5d665fd242eedea7675"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.springframework:spring-core"}}},{"id":"0f9ac8399aae46521a8d50703e68e1849722580e","name":"Arbitrary File Write at Plexus Archiver Component","description":"The Plexus project provides a full software stack for creating and executing software projects. - Plexus Archiver Component is vulnerable to zip-slip vulnerability. The vulnerability exists when the attacker inputs a malicious zip archive with filenames including file traversal characters such as dot dot (`..`), leading to concatenation of file path locating outside of the destination folder.","cve":"2018-1002200","severity":"Medium","solution":"No immediate fix found!","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:org.codehaus.plexus:plexus-archiver"},"version":"1.0-alpha-3"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Plexus Archiver Component - Version: 1.0-alpha-3-2.4.4 - CVE: 2018-1002200","value":"JAVA - Plexus Archiver Component - Version: 1.0-alpha-3-2.4.4 - CVE: 2018-1002200","url":"https://github.com/codehaus-plexus/plexus-archiver/issues"},{"type":"cve","name":"2018-1002200","value":"2018-1002200","url":"https://github.com/codehaus-plexus/plexus-archiver/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/5533?version=1.0-alpha-3"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/6574"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.codehaus.plexus:plexus-archiver"}}},{"id":"6344501cb03cb4787c67cf3f820a471e07b9203b","name":"Cross-Site Tracing (XST) at Spring Web","description":"Spring Web - spring-web is vulnerable to cross-site tracing (XST) attacks. The vulnerability exists as `HiddenHttpMethodFilter` allows web applications to change existing HTTP request method to any HTTP method, causing applications with existing cross-site scripting (XSS) vulnerability to be vulnerable to XST.","cve":"2018-11039","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.springframework:spring-web"},"version":"4.3.10.RELEASE"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Spring Web - Version: 4.3.0.RELEASE-4.3.17.RELEASE - CVE: 2018-11039","value":"JAVA - Spring Web - Version: 4.3.0.RELEASE-4.3.17.RELEASE - CVE: 2018-11039","url":"https://github.com/spring-projects/spring-framework/issues"},{"type":"cve","name":"2018-11039","value":"2018-11039","url":"https://github.com/spring-projects/spring-framework/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/1104?version=4.3.10.RELEASE"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/6806"},{"url":"https://github.com/spring-projects/spring-framework/commit/323ccf99e575343f63d56e229c25c35c170b7ec1"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.springframework:spring-web"}}},{"id":"6809017a5a76bdaf1957f1cc0a892d448fc6f3df","name":"Cross-Domain Request Through Insecure JSONP Defaults at Spring Web MVC","description":"Spring Web MVC - spring-webmvc is vulnerable to cross-domain requests. The vulnerability exists as JSONP is enabled through the `jsonp` and `callback` JSONP parameters in MappingJackson2JsonView by default.","cve":"2018-11040","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.springframework:spring-webmvc"},"version":"4.3.10.RELEASE"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Spring Web MVC - Version: 4.3.0.RELEASE-4.3.17.RELEASE - CVE: 2018-11040","value":"JAVA - Spring Web MVC - Version: 4.3.0.RELEASE-4.3.17.RELEASE - CVE: 2018-11040","url":"https://github.com/spring-projects/spring-framework/issues"},{"type":"cve","name":"2018-11040","value":"2018-11040","url":"https://github.com/spring-projects/spring-framework/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/949?version=4.3.10.RELEASE"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/6807"},{"url":"https://github.com/spring-projects/spring-framework/commit/874859493bbda59739c38c7e52eb3625f247b93a"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.springframework:spring-webmvc"}}},{"id":"6809017a5a76bdaf1957f1cc0a892d448fc6f3df","name":"Denial Of Service (DoS) at Spring Web MVC","description":"Spring Web MVC - spring-web is vulnerable to denial of service (DoS). A malicious user can pass a HTTP request containing a header with overlapping ranges, leading to an error which would crash the service.","cve":"2018-15756","severity":"Medium","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.springframework:spring-webmvc"},"version":"4.3.10.RELEASE"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Spring Web MVC - Version: 4.3.0.RELEASE-4.3.19.RELEASE - CVE: 2018-15756","value":"JAVA - Spring Web MVC - Version: 4.3.0.RELEASE-4.3.19.RELEASE - CVE: 2018-15756","url":"https://github.com/spring-projects/spring-framework/issues"},{"type":"cve","name":"2018-15756","value":"2018-15756","url":"https://github.com/spring-projects/spring-framework/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/949?version=4.3.10.RELEASE"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/7620"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.springframework:spring-webmvc"}}},{"id":"f5c644543148f028880ab3573ba8095faa71d9f8","name":"Authorization Bypass at MySQL Connector/J","description":"JDBC Type 4 driver for MySQL - mysql-connector-java is vulnerable to authorization bypass. A difficult-to-exploit vulnerability allows a high-privileged attacker to bypass authorization, compromise the MySQL connectors and obtain full control over the connectors.","cve":"2019-2692","severity":"Low","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:mysql:mysql-connector-java"},"version":"5.1.35"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - MySQL Connector/J - Version: 2.0.14-8.0.15 - CVE: 2019-2692","value":"JAVA - MySQL Connector/J - Version: 2.0.14-8.0.15 - CVE: 2019-2692","url":"https://www.veracode.com"},{"type":"cve","name":"2019-2692","value":"2019-2692","url":"https://www.veracode.com"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/1834?version=5.1.35"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/20694"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:mysql:mysql-connector-java"}}},{"id":"5af35056b4d257e4b64b9e8069c0746e8b08629f","name":"Arbitrary Code Execution at Apache Log4j","description":"Apache Log4j 1.2 - log4j-core is vulnerable to arbitrary code execution. Deserialization of untrusted data in `TcpSocketServer` and `UdpSocketServer` when listening for log data allows an attacker to execute arbitrary code via a malicious deserialization gadget.","cve":"2019-17571","severity":"High","solution":"log4j:log4j 1.x is out of life. We recommend users to upgrade to the latest version of org.apache.logging.log4j:log4j-core","location":{"file":"transitive dependency","dependency":{"package":{"name":"MAVEN:log4j:log4j"},"version":"1.2.17"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Apache Log4j - Version: 1.2.4-1.2.17 - CVE: 2019-17571","value":"JAVA - Apache Log4j - Version: 1.2.4-1.2.17 - CVE: 2019-17571","url":"https://issues.apache.org/bugzilla/describecomponents.cgi?product=Log4j"},{"type":"cve","name":"2019-17571","value":"2019-17571","url":"https://issues.apache.org/bugzilla/describecomponents.cgi?product=Log4j"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/163?version=1.2.17"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/22224"},{"url":"https://www.veracode.com"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:log4j:log4j"}}},{"id":"f5c644543148f028880ab3573ba8095faa71d9f8","name":"Denial Of Service (DoS) at MySQL Connector/J","description":"JDBC Type 4 driver for MySQL - mysql-connector-java is vulnerable to denial of service. When working with a load balancing setup, if the connection property `loadBalanceStrategy` was set to `bestResponseTime` and connections to all the hosts in the original setup failed, a denial of service condition will occur in Connector/J, even if newly-added hosts are available.","cve":"2020-2933","severity":"Low","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:mysql:mysql-connector-java"},"version":"5.1.35"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - MySQL Connector/J - Version: 5.1.6-5.1.48 - CVE: 2020-2933","value":"JAVA - MySQL Connector/J - Version: 5.1.6-5.1.48 - CVE: 2020-2933","url":"https://www.veracode.com"},{"type":"cve","name":"2020-2933","value":"2020-2933","url":"https://www.veracode.com"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/1834?version=5.1.35"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/26741"},{"url":"https://github.com/mysql/mysql-connector-j/commit/e824d25875e2fdfdacf8a09e8d829df00a3db8e7"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:mysql:mysql-connector-java"}}},{"id":"6344501cb03cb4787c67cf3f820a471e07b9203b","name":"Reflected File Download (RFD) Attack at Spring Web","description":"Spring Web - spring-web is vulnerable to Reflected File Download (RFD) attack. An incomplete fix of CVE-2015-5211 allows an attacker to bypass the protection against RFD attack via the `jsessionid` path parameter.\n\n","cve":"2020-5421","severity":"Low","solution":"No immediate fix found!","location":{"file":"pom.xml","dependency":{"package":{"name":"MAVEN:org.springframework:spring-web"},"version":"4.3.10.RELEASE"}},"identifiers":[{"type":"Veracode Agent Based SCA","name":"JAVA - Spring Web - Version: 4.3.0.RELEASE-4.3.28.RELEASE - CVE: 2020-5421","value":"JAVA - Spring Web - Version: 4.3.0.RELEASE-4.3.28.RELEASE - CVE: 2020-5421","url":"https://github.com/spring-projects/spring-framework/issues"},{"type":"cve","name":"2020-5421","value":"2020-5421","url":"https://github.com/spring-projects/spring-framework/issues"}],"links":[{"url":"https://www.sourceclear.com/vulnerability-database/libraries/1104?version=4.3.10.RELEASE"},{"url":"https://www.sourceclear.com/vulnerability-database/vulnerabilities/26780"},{"url":"https://github.com/spring-projects/spring-framework/commit/dd011c991ce801660ec2be7979f3fc6462f29289"}],"details":{"vulnerable_package":{"type":"text","name":"Vulnerable Package","value":"MAVEN:org.springframework:spring-web"}}}],"dependency_files": [{"path": "pom.xml","package_manager": "maven","dependencies": [{"package":{"name":"HttpClient"},"version":"1.0-3.1"},{"package":{"name":"Apache XML Security for Java"},"version":"1.0-1.5.5"},{"package":{"name":"Apache XML Security for Java"},"version":"1.5.0-1.5.4"},{"package":{"name":"HttpClient"},"version":"3.0-3.1"},{"package":{"name":"HttpClient"},"version":"3.0-3.1"},{"package":{"name":"jstl"},"version":"1.0-1.2"},{"package":{"name":"jBCrypt"},"version":"0.3m-0.3m"},{"package":{"name":"Apache Sling API"},"version":"0.0-2.2.1"},{"package":{"name":"Apache Commons Collections"},"version":"4.0-4.0"},{"package":{"name":"Keycloak SAML Core"},"version":"1.1.0.Beta1-1.9.0.CR1"},{"package":{"name":"Apache Commons FileUpload"},"version":"1.1-1.3.2"},{"package":{"name":"Keycloak SAML Core"},"version":"1.2.0.CR1-2.5.4.Final"},{"package":{"name":"Plexus Common Utilities"},"version":"1.0.4-1.5"},{"package":{"name":"MySQL Connector/J"},"version":"5.1.21-5.1.41"},{"package":{"name":"MySQL Connector/J"},"version":"5.1.1-5.1.40"},{"package":{"name":"MySQL Connector/J"},"version":"5.1.1-5.1.41"},{"package":{"name":"Keycloak SAML Core"},"version":"1.2.0.CR1-2.5.0.Final"},{"package":{"name":"Apache Commons IO"},"version":"1.0-2.4"},{"package":{"name":"Spring Web MVC"},"version":"3.1.0.RELEASE-4.3.12.RELEASE"},{"package":{"name":"Spring Web MVC"},"version":"4.0.0.RELEASE-4.3.14.RELEASE"},{"package":{"name":"Spring Core"},"version":"4.2.0.RELEASE-4.3.14.RELEASE"},{"package":{"name":"Plexus Archiver Component"},"version":"1.0-alpha-3-2.4.4"},{"package":{"name":"Spring Web"},"version":"4.3.0.RELEASE-4.3.17.RELEASE"},{"package":{"name":"Spring Web MVC"},"version":"4.3.0.RELEASE-4.3.17.RELEASE"},{"package":{"name":"Spring Web MVC"},"version":"4.3.0.RELEASE-4.3.19.RELEASE"},{"package":{"name":"MySQL Connector/J"},"version":"2.0.14-8.0.15"},{"package":{"name":"Apache Log4j"},"version":"1.2.4-1.2.17"},{"package":{"name":"MySQL Connector/J"},"version":"5.1.6-5.1.48"},{"package":{"name":"Spring Web"},"version":"4.3.0.RELEASE-4.3.28.RELEASE"}]}], "scan": { "analyzer": { "id": "Veracode-SCA","name": "Veracode SCA Agent Based Scan", "url": "https://www.veracode.com", "vendor": { "name": "Veraocde"},"version": "latest"},"scanner": {"id": "Veracode-SCA","name": "Veracode SCA Agent Based Scan","url": "https://www.veracode.com", "vendor": {"name": "Veraocde"},"version": "latest"}, "type": "dependency_scanning","start_time": "2023-08-26T05:21:24","end_time": "2023-08-26T05:21:47", "status": "success"}}